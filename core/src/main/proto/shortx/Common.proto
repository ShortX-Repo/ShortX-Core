syntax = "proto3";

option java_package = "tornaco.apps.shortx.core.proto.common";
option java_outer_classname = "OuterCommon";
option java_multiple_files = true;

message AppPkg {
  string pkgName = 1;
  int32 userId = 2;
}

enum AppCategory {
  User = 0;
  System = 1;
}

message App {
  AppPkg pkg = 1;
  string label = 2;
  AppCategory category = 3;
  int32 uid = 4;

  bool isGame = 5;
  bool isXposedMod = 6;
  bool isDisabled = 7;
  bool isSuspend = 8;
  bool isShortcutStub = 9;

  int64 versionCode = 10;
  string versionName = 11;
}

message AppComponent {
  AppPkg pkg = 1;
  string className = 2;
}

message AppComponentInfo {
  AppComponent component = 1;
  string label = 2;
  int32 enableSetting = 3;
}

message AppProcessName {
  AppPkg pkg = 1;
  string processName = 2;
}

message ProcessName {
  int32 userId = 1;
  string processName = 2;
}

message Author {
  string name = 1;
}

enum OnOffAny {
  On = 0;
  Off = 1;
  Any = 2;
}

enum OnOffToggle {
  OnOffToggle_On = 0;
  OnOffToggle_Off = 1;
  OnOffToggle_Toggle = 2;
}

message CommonApiRes {
  int32 result = 1;
  string msg = 2;
  string k = 3;
  string i = 4;
  string j = 5;
  string l = 6;
  string m = 7;
}

message AndroidIntent {
  string action = 1;
  int32 flags = 2;
  string pkgName = 3;
  string className = 4;
  string data = 5;
  repeated AndroidIntentExtra extras = 6;
}

message AndroidIntentExtra {
  string key = 1;
  string value = 2;
  AndroidIntentExtraType type = 3;
}

enum AndroidIntentExtraType {
  Int = 0;
  Long = 1;
  String = 2;
  Bool = 3;
  Float = 4;
  Double = 5;
}

message Location {
  string latitude = 1;
  string longitude = 2;
}

message UserInfo {
  string name = 1;
  int32 userId = 2;
  bool isMain = 3;
}

message RecentTask {
  AppPkg owner = 1;
  int32 taskId = 2;
}

enum IntOp {
  // >
  IntGreaterThan = 0;
  // >=
  IntGreaterThanOrEQ = 1;
  // <
  IntLessThan = 2;
  // <=
  IntLessThanOrEQ = 3;
  // ==
  IntEqualTo = 4;
}

message ProcessRecord {
  AppPkg owner = 1;
  int64 pid = 2;
  int32 uid = 3;
  string processName = 4;
}

message ShellRes {
  repeated string out = 1;
  repeated string err = 2;
  int32 code = 3;
}

message FloatRange {
  float from = 1;
  float to = 2;
}

message IntRange {
  int32 from = 1;
  int32 to = 2;
}

message TimeOfADay {
  int32 hour = 1;
  int32 minutes = 2;
  int32 seconds = 3;
}

message TimeOfADayRange {
  TimeOfADay start = 1;
  TimeOfADay end = 2;
}

enum VolumeDirection {
  // public static final int ADJUST_RAISE = 1;
  //    public static final int ADJUST_LOWER = -1;
  //    public static final int ADJUST_SAME = 0;
  //    public static final int ADJUST_MUTE = -100;
  //    public static final int ADJUST_UNMUTE = 100;
  //    public static final int ADJUST_TOGGLE_MUTE = 101;

  ADJUST_SAME = 0;
  ADJUST_RAISE = 1;
  ADJUST_LOWER = -1;
  ADJUST_MUTE = -100;
  ADJUST_UNMUTE = 100;
  ADJUST_TOGGLE_MUTE = 101;
}

enum KeyGesture {
  KeyPress = 0;
  KeyMultiplePress = 1;
  KeyTriplePress = 2;
  KeyLongPress = 3;
}

message PhoneCellInfo {
  string mcc = 1;
  string mnc = 2;
  string clazz = 3;
  string operatorAlphaLong = 4;
  string id = 5;
}

enum AudioSource {
  Mic = 0;
  Internal = 1;
  MicAndInternal = 2;
}

message AudioRecordFile {
  string name = 1;
  string path = 2;
  int64 date = 3;
  int64 fileSize = 4;
}

message BTBondedDevice {
  string alias = 1;
  string address = 2;
  int32 batteryLevel = 3;
  bool isConnected = 4;
}

enum HttpRequestMethod {
  GET = 0;
  POST = 1;
  PUT = 2;
  PATCH = 3;
  DELETE = 4;
  HEAD = 5;
}

message HttpRequestHeader {
  string key = 1;
  string value = 2;
}

message HttpRequestBodyJson {
  string json = 1;
}

message HttpRequestBodyForm {
  repeated HttpRequestBodyFormItem items = 1;
}

message HttpRequestBodyFormItem {
  string key = 1;
  string value = 2;
}

enum ActionOnError {
  Continue = 0;
  Break = 1;
}

enum ConflictStrategy {
  ConflictStrategy_ExecuteBoth = 0;
  ConflictStrategy_ReplaceOld = 1;
  ConflictStrategy_SkipNew = 2;
}

enum ScreenOrientation {
  ScreenOrientation_P = 0;
  ScreenOrientation_L = 1;
}

message GestureRecord {
  repeated bytes eventData = 1;
  string label = 2;
  int64 duration = 3;
  int64 recordingTimeMillis = 4;
  ScreenOrientation screenOrientation = 5;

  string id = 100;
}

message GestureRecordList {
  repeated GestureRecord records = 1;
}


message TextFieldProp {
  string label = 1;
  string placeholder = 2;
  string isRequired = 3;
}

enum AppLanguage {
  enUS = 0;
  zhCN = 2;
  zhTW = 3;
}

enum StatusBarTile {
  Tile1 = 0;
  Tile2 = 1;
  Tile3 = 2;
  Tile4 = 3;
  Tile5 = 4;
  Tile6 = 5;
  Tile7 = 6;
  Tile8 = 7;
  Tile9 = 8;
}

message StatusBarTileSetting {
  StatusBarTile tile = 1;
  string label = 2;
  string iconName = 3;
  bool isActive = 4;
}

message StatusBarTileSettingList {
  repeated StatusBarTileSetting settings = 1;
}

message StringPair {
  string first = 1;
  string second = 2;
}

message SystemSettingsAccessRecord {
  string url = 1;
  string value = 2;
  int64 timeMillis = 3;
}

enum CallState {
  CallStateIdle = 0;
  CallStateRinging = 1;
  CallStateOffHook = 2;
}

message CustomContextDataKey {
  repeated StringPair keys = 1;
}

message QSTile {
  string tileSpec = 1;
  string label = 2;
}

message QSTileList {
  repeated QSTile tile = 1;
}

enum QSTileState  {
  QSTileState_Unavailable = 0;
  QSTileState_InActive = 1;
  QSTileState_Active = 2;
}

enum BiometricVerifyResultCase {
  BiometricVerifyResult_Allow_BiometricNotReady = 0;
  BiometricVerifyResult_Allow_Verified = 1;
  BiometricVerifyResult_Deny_VerifyFail = 2;
  BiometricVerifyResult_Deny_UserCanceled = 3;
}


enum ScreenRotateDegree {
  ScreenRotateDegree_0 = 0;
  ScreenRotateDegree_90 = 1;
  ScreenRotateDegree_180 = 2;
  ScreenRotateDegree_270 = 3;
  ScreenRotateDegree_Any = 4;
}

message SensorUsage {
  int32 sensor = 1;
  repeated string srcId = 2;
}

enum RegexMatchOptions {
  RegexMatchOptions_Match = 0;
  RegexMatchOptions_ContainsMatchIn = 1;
}

message WifiConfig {
  int32 networkId = 1;
  string ssid = 2;
}

message Ringtone {
  string title = 1;
  string uri = 2;
  int32 type = 3;
}

message DownloadSubject {
  string title = 1;
  string description = 2;
  string url = 3;
  string fileName = 4;
}

message HttpResponseData {
  int32 code = 1;
  string message = 2;
  string body = 3;
  map<string, string> headers = 4;
}